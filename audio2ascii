#!/bin/bash

# audio2ascii audio_file ascii_file dim Natron_project_fps length [multiplication_factor]
# sox must installed
# yad must be installed for the GUI

function usage() {
	ud=$(basename "$0")
	echo "Usage: $ud [-g] audio_file file.ascii dim Natron_project_fps lenght [multiplication_factor]"
	echo "-g : start with GUI"
	echo "Convert audio file (all supported by 'sox') in an ascii file support by Natron"
	echo "'sox' must be installed"
	echo "Only for GUI:'yad' must be installed"
	exit
}

function error() {
	echo -e "\n$(cat ${error_log})"
	[[ $gui ]] && yad --center --on-top --geometry="400x120" --image="error" --text="\n\t<b>Sox Error:</b>\n\n\n\t$(cat ${error_log})" 2> /dev/null &
	sleep 1 # let time to read ${error_log}
	rm ${error_log}
	exit $1
}

[[ "$1" == "-h" || "$1" == "--help" ]] && usage

if ! which sox >/dev/null;then
	echo "$0 require 'sox' which is not installed"
	exit 1  
fi

if [ "$1" == "-g" ]; then
	gui=1
	shift
	if ! which yad >/dev/null;then
		echo "$0 require 'yad' which is not installed"
		exit 1
	fi
else
	gui=
fi

if [ $gui ];then
	YAD_TMP=$(mktemp --tmpdir yad.XXXXXXXX)
	yad	--center --on-top --title="Convert Audio to ascii"\
		--form	--field="<b>Audio file </b> to convert \::FL"\
				--field="<b>Ascii file </b> to create \::SFL"\
				--field="<b>Dimensions </b> (on 1 axe\: x or on 2 axes\:xy)\:CB"\
				--field="<b>Frames/sec </b> (of the Natron project)\:"\
				--field="<b>Duration</b> (of the curve in secondes)\:"\
				--field="<b>Multiplcator Factor</b> (default is 1000)\nSet the height of the curve:"\
				"${1}"\
				"${2:-"${HOME}/Desktop/curve.ascii"}"\
				"x!xy"\
				"${4:-24}"\
				"${5:-10}"\
				"${6:-1000}" > "${YAD_TMP}" 2>/dev/null 
	[[ $? = 252 || $? = 1 ]] && rm "${YAD_TMP}" && exit 1
	
	in="$(cut -d'|' -f1 < "${YAD_TMP}")"
	out="$(cut -d'|' -f2 < "${YAD_TMP}")"
	dim="$(cut -d'|' -f3 < "${YAD_TMP}")"
	fps="$(cut -d'|' -f4 < "${YAD_TMP}")"
	len="$(cut -d'|' -f5 < "${YAD_TMP}")"
	fact="$(cut -d'|' -f6 < "${YAD_TMP}")"
	
	rm "${YAD_TMP}"
else
	[[ -z $3 ]] && usage

	in="${1}"
	out="${2}"
	dim="${3}"
	fps="${4}"
	len="${5}"
	# multip. factor Default: 1000
	fact="${6:-1000}"
fi

data="/tmp/data_$$_tmp.dat"
error_log="/tmp/error_log_sox_$$"

# convert audio to .dat 
srate=$(sox --i "${in}" 2>${error_log} | grep "^Sample Rate" | awk '{print $4}')
echo CMD: sox "${in}" -r ${fps} "${data}" trim 0 ${len}
echo -n "Converting $in to Data file with SampleRate $fps (original: $srate)..."
sox "${in}" -r ${fps} "${data}" trim 0 ${len} 2>${error_log} || error 1
echo "Done"

# convert .dat to ascii
max=0
echo -n "Converting Data file to $out..."
while read line
do
	if [ "$dim" == "x" ];then
		# x
		read dimx max <<< $( echo $line | grep -v ";" | sed 's/ [[:blank:]]//g;s/[[:space:]]/ /g' |\
						awk -v fact="$fact" -v max="$max"\
							'
							{printf "%.10f\n", ($2*fact)}\
							{if ($2 < 0) $2 = -$2}\
							{if (($2*fact) > max) max = ($2*fact)}\
							{print max}\
							')
		echo $dimx $max
	else
		# xy
		read dimxy max <<< $( echo $line | grep -v ";" | sed 's/ [[:blank:]]//g;s/[[:space:]]/ /g' |\
						awk -v fact="$fact" -v max="$max"\
						'
						{printf "%.10f_%.10f\n", $2*fact, $3*fact}\
						{if ($2 < 0) $2 = -$2}\
						{if ($3 < 0) $3 = -$3}\
						{if ($3 > $2)  $2 = $3}\
						{if (($2*fact) > max) max = ($2*fact)}\
						{print max}\
						')
		echo $dimxy $max
	fi
done < "${data}" > "${out}"
echo "Done"
echo The maximum varation is $max
[[ gui ]] && { 
				yad --center --on-top --geometry="400x120" --image="info" --text="\n\n\n\t\tThe maximum varation is <b>$max</b>"\
					--button="Change some parameters:2"\
					--button="Ok:0" 2> /dev/null
				ret=$?
				[[ $ret == 2 ]] && "${0}" -g "${in}" "${out}" "${dim}" "${fps}" "${len}" "${fact}"
			 }
			 
rm "${data}"
